#include<LiquidCrystal.h>
LiquidCrystal lcd (8,7,6,5,4,3); 
int ledPin = 13;
int buttonPin = 2;

int start;
int stareAnterioara = HIGH;
unsigned int ultimaApasare;
int viteza=200;

volatile int btnFlag = 1;

int susJos=0; //sus = 0; jos = 1

String linieSus    = "     --------       --         ---                   "; 

int  Sus[]    = {6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 30, 31, 32 };

int ok = 1;

byte Alien[] = {
  B11111,
  B10101,
  B11111,
  B11111,
  B01110,
  B01010,
  B11011,
  B00000
};

byte Skull[] = {
  B00000,
  B01110,
  B10101,
  B11011,
  B01110,
  B01110,
  B00000,
  B00000
};

byte Skull1[] = {
  B00000,
  B01110,
  B10101,
  B11011,
  B01110,
  B01110,
  B00000,
  B00000
};

byte Skull2[] = {
  B00000,
  B01110,
  B10101,
  B11011,
  B01110,
  B01110,
  B00000,
  B00000
};

byte Skull3[] = {
  B00000,
  B01110,
  B10101,
  B11011,
  B01110,
  B01110,
  B00000,
  B00000
};

byte Skull4[] = {
  B00000,
  B01110,
  B10101,
  B11011,
  B01110,
  B01110,
  B00000,
  B00000
};

byte Skull5[] = {
  B00000,
  B01110,
  B10101,
  B11011,
  B01110,
  B01110,
  B00000,
  B00000
};

byte Skull6[] = {
  B00000,
  B01110,
  B10101,
  B11011,
  B01110,
  B01110,
  B00000,
  B00000
};

byte Skull7[] = {
  B00000,
  B01110,
  B10101,
  B11011,
  B01110,
  B01110,
  B00000,
  B00000
};


byte Skull8[] = {
  B00000,
  B01110,
  B10101,
  B11011,
  B01110,
  B01110,
  B00000,
  B00000
};

byte Skull9[] = {
  B00000,
  B01110,
  B10101,
  B11011,
  B01110,
  B01110,
  B00000,
  B00000
};

byte Skull10[] = {
  B00000,
  B01110,
  B10101,
  B11011,
  B01110,
  B01110,
  B00000,
  B00000
};

byte Heart[] = {
  B00000,
  B01010,
  B11111,
  B11111,
  B01110,
  B00100,
  B00000,
  B00000
};
byte Heart1[] = {
  B00000,
  B01010,
  B11111,
  B11111,
  B01110,
  B00100,
  B00000,
  B00000
};


String linieJos   = "                 --       ----                        ";

int Jos[]    = {16, 17, 24, 25, 26, 27};


void setup()
{
   // put your setup code here, to run once:
  
  lcd.begin(16,2); //setam nr randuri si coloane
  lcd.begin(16,2);
  
  //configuram pinii pentru butoane
  pinMode(ledPin, OUTPUT);
  pinMode(buttonPin, INPUT_PULLUP);
   
  attachInterrupt(digitalPinToInterrupt(2), btn_ISR, CHANGE);
  
  while(start == 0)
  {
    lcd.clear(); //se sterge ecranul LCD-ului
    delay(1000);
    lcd.print("PUTEM INCEPE");
    delay(1000);
  }
  
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.createChar(1, Alien);
  lcd.createChar(2, Skull);
  lcd.createChar(3, Skull1);
  lcd.createChar(4, Skull2);
  lcd.createChar(5, Skull3);
  lcd.createChar(6, Skull4);
  lcd.createChar(7, Skull5);
  lcd.createChar(8, Skull6);
  lcd.createChar(9, Skull7);
  lcd.createChar(10, Skull8);
  lcd.createChar(11, Skull9);
  lcd.createChar(12, Skull10);
  lcd.createChar(13, Heart);
  lcd.createChar(14, Heart1);
}


void loop() 
{
int i=0;
while(ok)
 {
   while(i<33)
   {
    if(susJos==0)
    {
      lcd.setCursor(1,0);
      lcd.print(linieSus.substring(i+1,5+i));
	  lcd.setCursor(0,1);
      lcd.print(linieJos.substring(i,5+i));
    }
    else
    {
      lcd.setCursor(0,0);
      lcd.print(linieSus.substring(i,5+i));
	  lcd.setCursor(1,1);
      lcd.print(linieJos.substring(i+1,5+i));
    }
     
    for(int j=0;j<13;j++)
    {
      if(Sus[j]==i)
      {
        if(susJos==0)
        {
          finalGame();
        }
      }
	  else
	  {
	  if(Jos[j]==i)
      {
        if(susJos==1)
        {
          finalGame();
        }
      }
	  }
    }
    delay(viteza);
    i++;
  }
   castigGame();
 }
}

void finalGame (void)
{
  detachInterrupt(digitalPinToInterrupt(2));
  
  while(ok)
  {
    lcd.clear();
    lcd.setCursor(0, 0);
    //lcd.print(' ');
    lcd.write((byte)2);
    lcd.print(" Ati pierdut ");
    lcd.write((byte)3);
    lcd.setCursor(0, 1);
    lcd.write((byte)4);
    lcd.write((byte)5);
    lcd.write((byte)6);
    lcd.write((byte)7);
    lcd.write((byte)8);
    lcd.write((byte)9);
    lcd.write((byte)10);
    lcd.write((byte)11);
    lcd.write((byte)12);
    lcd.write((byte)8);
    lcd.write((byte)9);
    lcd.write((byte)10);
    lcd.write((byte)11);
    lcd.write((byte)12);
    lcd.write((byte)5);
    lcd.write((byte)6);
    delay(1000);
  }
}
void castigGame (void)
{
  detachInterrupt(digitalPinToInterrupt(2));
  
  while(ok)
  {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.write((byte)13);
    lcd.print(" Ati castigat ");
    lcd.write((byte)14);
    lcd.setCursor(0, 1);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    lcd.write((byte)14);
    delay(1000);
  }
}

void btn_ISR()
{
   btnFlag = 1;
   if(btnFlag == 1)
  {
 
    if(digitalRead(buttonPin) == LOW && stareAnterioara== HIGH)
    {
      start  =! start ;
      digitalWrite(ledPin, start );
      stareAnterioara = LOW;
      if(start == 0)
      {
       lcd.setCursor(0,0);
       lcd.write((byte)1);
       lcd.setCursor(0,1);
       susJos=0;
      }
      else
      {
       lcd.setCursor(0,1);
	   lcd.write((byte)1);
       lcd.setCursor(0,0);
       susJos=1;
      }
      stareAnterioara = LOW;

    }
    else if(digitalRead(buttonPin) == HIGH && stareAnterioara == LOW)
    {
      stareAnterioara = HIGH;
    }
    btnFlag = 0;
  }
}


